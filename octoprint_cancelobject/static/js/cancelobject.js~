/*
 * View model for OctoPrint-Cancelobject
 *
 * Author: You
 * License: AGPLv3
 */
$(function() {
    function CancelobjectViewModel(parameters) {
    	var PLUGIN_ID = "cancelobject";
        var self = this;

        self.settings = parameters[0];
        self.loginStateViewModel = parameters[1];

        self.currentUrl = ko.observable();
        self.newUrl = ko.observable();
        self.navBarActive = ko.observable();
        self.ObjectList = ko.observableArray();
        self.TabList = ko.observable();

        self.goToUrl = function() {
			$.ajax({
				url: API_BASEURL + "plugin/cancelobject",
				type: "POST",
				dataType: "json",
				data: JSON.stringify({
					command: "skip"
				}),
				contentType: "application/json; charset=UTF-8"
			});
		};

        self.onBeforeBinding = function() {
            self.newUrl(self.settings.settings.plugins.cancelobject.url());
            OctoPrint.get("api/plugin/"+PLUGIN_ID);
        };
        
        self.cancelObject = function(obj) {
        	$.ajax({
				url: API_BASEURL + "plugin/cancelobject",
				type: "POST",
				dataType: "json",
				data: JSON.stringify({
					command: "cancel",
					cancelled: obj
				}),
				contentType: "application/json; charset=UTF-8"
			});	
        }
        
        self.updateObjectList = function() {
        	//start a new list

        	var table = document.createElement("table");
        	var columnCount = self.ObjectList[0].length;
        	for (var i = 0; i < self.ObjectList.length; i++) {
        		var row = table.insertRow(-1);
        		
        		var cell1 = row.insertCell(-1);
        		cell1.innerHTML = self.ObjectList[i]["object"];
        		var cell2 = row.insertCell(-1);
        		cell2.innerHTML = '<button class="cancel-btn" value="'+cell1.innerHTML+'">Cancel</button>';
        			
        	}
        	
        	var divContainer = document.getElementById("cancel-table");
        	divContainer.innerHTML = "";
        	divContainer.appendChild(table);
        	
        	

        }
            $(document.body).on("click", ".cancel-btn", function (event) {
            	console.log($(this).attr("value"));
            	var theobject = $(this).attr("value");
            	showConfirmationDialog({
                        title: gettext("Are you sure?"),
                        message: gettext("<p><strong>You are about to cancel this object.</strong>"),
                        question: gettext("Are you sure you want to do this?"),
                        cancel: gettext("Exit"),
                        proceed: gettext("Cancel It"),
                        onproceed:  function() {
                            self.cancelObject(theobject);
                        }
                    });
        		//self.cancelObject($(this).attr("value"));
        		//self.goToUrl();
    		});
        self.onDataUpdaterPluginMessage = function (plugin, data) {
            
        	if (data.navBarActive){
                self.navBarActive(data.navBarActive);
                //new PNotify({
                //    title: 'Attention',
                //    text: data.navBarActive,
                //    type: 'error',
                //    hide: false
                //    });
            }
            if (data.objects){
            	self.ObjectList = data.objects;
            	self.updateObjectList();
            }
        }
    }
    


    // This is how our plugin registers itself with the application, by adding some configuration
    // information to the global variable OCTOPRINT_VIEWMODELS
    OCTOPRINT_VIEWMODELS.push([
        // This is the constructor to call for instantiating the plugin
        CancelobjectViewModel,

        // This is a list of dependencies to inject into the plugin, the order which you request
        // here is the order in which the dependencies will be injected into your view model upon
        // instantiation via the parameters argument
        ["settingsViewModel","loginStateViewModel"],

        // Finally, this is the list of selectors for all elements we want this view model to be bound to.
        
        ["#navbar_plugin_cancelobject","#tab_plugin_cancelobject"]
    ]);
});